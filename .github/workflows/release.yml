name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build release binaries
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: gmi
            asset_name: gmi-linux-x86_64.tar.gz
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: gmi.exe
            asset_name: gmi-windows-x86_64.zip
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: gmi
            asset_name: gmi-macos-x86_64.tar.gz
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: gmi
            asset_name: gmi-macos-arm64.tar.gz

    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}

    - name: Build binary
      run: cargo build --release --target ${{ matrix.target }}

    - name: Strip binary (Unix)
      if: matrix.os != 'windows-latest'
      run: strip target/${{ matrix.target }}/release/${{ matrix.artifact_name }}

    - name: Create archive (Unix)
      if: matrix.os != 'windows-latest'
      run: |
        cd target/${{ matrix.target }}/release
        tar czf ../../../${{ matrix.asset_name }} ${{ matrix.artifact_name }}
        cd -

    - name: Create archive (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        cd target/${{ matrix.target }}/release
        7z a ../../../${{ matrix.asset_name }} ${{ matrix.artifact_name }}
        cd -

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.asset_name }}
        path: ${{ matrix.asset_name }}

  release:
    name: Create release
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: artifacts/**/*
        body: |
          ## Changes
          See [CHANGELOG.md](CHANGELOG.md) for details.
          
          ## Installation
          Download the appropriate binary for your platform:
          - **Linux x86_64**: `gmi-linux-x86_64.tar.gz`
          - **Windows x86_64**: `gmi-windows-x86_64.zip`
          - **macOS x86_64**: `gmi-macos-x86_64.tar.gz`
          - **macOS ARM64**: `gmi-macos-arm64.tar.gz`
          
          ### Quick Install (Linux/macOS)
          ```bash
          # Linux
          wget https://github.com/Hansuku/ghost-markdown-importer/releases/download/${{ github.ref_name }}/gmi-linux-x86_64.tar.gz
          tar -xzf gmi-linux-x86_64.tar.gz
          sudo mv gmi /usr/local/bin/
          
          # macOS (Intel)
          wget https://github.com/Hansuku/ghost-markdown-importer/releases/download/${{ github.ref_name }}/gmi-macos-x86_64.tar.gz
          tar -xzf gmi-macos-x86_64.tar.gz
          sudo mv gmi /usr/local/bin/
          
          # macOS (Apple Silicon)
          wget https://github.com/Hansuku/ghost-markdown-importer/releases/download/${{ github.ref_name }}/gmi-macos-arm64.tar.gz
          tar -xzf gmi-macos-arm64.tar.gz
          sudo mv gmi /usr/local/bin/
          ```
          
          ### Usage
          ```bash
          gmi ./your-content --output ghost-import.json --recursive
          ```
        draft: false
        prerelease: false